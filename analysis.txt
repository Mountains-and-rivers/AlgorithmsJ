(1)   for(i=1;i<=n;i++)   //循环了n*n次，O(n^2)
            for(j=1;j<=n;j++)
                 s++;

(2)   for(i=1;i<=n;i++)//循环了(n+n-1+n-2+...+1)≈(n^2)/2，因为时间复杂度是不考虑系数的，所以也是O(n^2)
            for(j=i;j<=n;j++)
                 s++;


(3)   for(i=1;i<=n;i++)//循环了(1+2+3+...+n)≈(n^2)/2,当然也是O(n^2)
            for(j=1;j<=i;j++)
                 s++;

(4)   i=1;k=0;
      while(i<=5){
           k+=10*i;
      i++;   }
O(1)；
//循环了
n-1≈n次，所以是O(n)
(5)   for(i=1;i<=n;i++)
             for(j=1;j<=i;j++)
                 for(k=1;k<=j;k++)
                       x=x+1;
//
循环了(1^2+2^2+3^2+...+n^2)=n(n+1)(2n+1)/6(这个公式要记住哦)≈(n^3)/3，不考虑系数，自然是O(n^3)

i=n-1;
while(i>=0&&(A[i]!=k))
      i--;
return i;
// 此算法中的语句(3)的频度不仅与问题规模n有关，还与输入实例中A的各元素取值及K的取值有关: ①若A中没有与K相等的元素，则语句(3)的频度f(n)=n； ②若A的最后一个元素等于K,则语句(3)的频度f(n)是常数0。
